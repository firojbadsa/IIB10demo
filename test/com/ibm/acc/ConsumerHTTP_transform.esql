BROKER SCHEMA com.ibm.acc


CREATE COMPUTE MODULE ConsumerHTTP_transform
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		
		
		DECLARE AutHeader BLOB BASE64DECODE(SUBSTRING(InputRoot.HTTPInputHeader.Authorization AFTER 'Basic ')); 
		DECLARE AutHeaderCHAR CHARACTER CAST(AutHeader AS CHARACTER CCSID 819);
		
		DECLARE USERID, PASSWD CHARACTER;
		DECLARE sqlstmtSelect,LOGIN,schemaName,tableName CHARACTER;
		SET schemaName = 'ACN';
        SET tableName = 'LOGIN';
		
		SET USERID = SUBSTRING(AutHeaderCHAR BEFORE ':');
		SET PASSWD = SUBSTRING(AutHeaderCHAR AFTER ':'); 
		
		SET sqlstmtSelect = 'SELECT USERID,PASSWD FROM ' || schemaName || '.' || tableName || ' F ' || 'WHERE (F.USERID = ? AND F.PASSWD <= ?)';
		
       	SET Environment.Variables.Login[] = PASSTHRU(sqlstmtSelect, USERID, PASSWD);
       	
/*       	IF LENGTH(Environment.Variables.Login.USERID) > 0  THEN
   			  		/* DO NOTHING */	
       	ELSE
       			THROW USER EXCEPTION CATALOG 'MyCatalog' MESSAGE 1234 VALUES
   				('User Not Available');
     		
       	END IF;

	   	SET OutputRoot.XMLNSC.Testcase.Results = THE( SELECT T.NAME FROM Database.EMPLOYEE AS T); */
 		

		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
